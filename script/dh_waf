#!/usr/bin/perl -w

=head1 NAME

dh_waf - Build with waf

=cut

use strict;
use Debian::Debhelper::Dh_Lib; # not in core
use Debian::Debhelper::Dh_Buildsystems; # not in core

=head1 SYNOPSIS

B<dh_waf> [S<I<debhelper options>>]

=head1 DESCRIPTION

B<dh_waf> is a debhelper program which adds the misc:Built-Using substvar
based on the dependencies of the package being built. It uses go list to
determine the packages imported and dpkg-query to find the source package and
version that provided that package.

=head1 NOTES

The best way to invoke B<dh_waf> is by using B<dh --with=waf>.

=cut

sub uniq {
    my %list = map { $_ => 1 } @_;

    return sort keys %list;
}

sub exec_single {
    my ($cmd, @args) = @_;

    verbose_print(escape_shell(@_));

    my @output = qx($cmd @args);
    error_exitcode($cmd) if $? != 0;
    chomp(@output);

    return @output;
}

# Amount of chunking we are going to use for dpkg commands, which should speed
# up the execution by avoiding too many database loads.
use constant CHUNKSIZE => 200;

sub exec_chunked {
    my ($cmd, @list) = @_;

    my @result;
    for (my $i = 0; $i < @list; $i += CHUNKSIZE) {
        push @result, exec_single($cmd, @list[$i .. $i + CHUNKSIZE - 1]);
    }

    return @result;
}

############################################################################
# Generate misc:Built-Using substvar.
############################################################################

buildsystems_init();
my $bs = load_buildsystem("waf");

=head1 SEE ALSO

dh(1)

=head1 AUTHORS

Michael Stapelberg <stapelberg@debian.org>

=cut

# vim:ts=4:sw=4:et
